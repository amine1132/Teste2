// Type pour les callbacks de notification
type NotificationCallback = (notification: {
  title: string
  message: string
  type: 'easter-egg' | 'love' | 'milestone' | 'secret'
  duration?: number
}) => void

// Instance globale pour le callback de notification
let notificationCallback: NotificationCallback | null = null

// Fonction pour d√©finir le callback de notification
export function setNotificationCallback(callback: NotificationCallback) {
  notificationCallback = callback
}

// Fonction utilitaire pour d√©clencher les Easter Eggs
export function triggerEasterEgg(chapterNumber?: number, message?: string) {
  const easterEggData = {
    1: {
      title: 'Premier Secret D√©couvert !',
      message: 'Tu as trouv√© l\'√©tincelle de notre premier regard... üíñ',
      type: 'easter-egg' as const
    },
    2: {
      title: 'Mots d\'Amour R√©v√©l√©s !',
      message: 'Les secrets de nos premi√®res conversations sont √† toi ! üíù',
      type: 'love' as const
    },
    3: {
      title: 'Engagement √âternel !',
      message: 'Tu as d√©couvert la promesse de notre engagement ! üíç',
      type: 'milestone' as const
    },
    4: {
      title: 'Ma√Ætre des Secrets !',
      message: 'F√©licitations ! Tu connais maintenant tous nos myst√®res ! üåü',
      type: 'secret' as const
    },
  }
  
  if (message && notificationCallback) {
    notificationCallback({
      title: 'Secret D√©couvert !',
      message,
      type: 'easter-egg',
      duration: 6000
    })
    return
  }
  
  if (chapterNumber && chapterNumber in easterEggData && notificationCallback) {
    const data = easterEggData[chapterNumber as keyof typeof easterEggData]
    notificationCallback({
      title: data.title,
      message: data.message,
      type: data.type,
      duration: 7000
    })
    
    // Marquer comme d√©couvert
    easterEggState.markAsDiscovered(`chapter-${chapterNumber}`)
  } else if (notificationCallback) {
    notificationCallback({
      title: 'Surprise Trouv√©e !',
      message: 'Tu as d√©couvert un secret de notre amour ! ‚ú®',
      type: 'easter-egg',
      duration: 5000
    })
  }
  
  console.log(`Easter Egg activ√© - Chapitre ${chapterNumber || 'inconnu'}`)
}

// Liste des Easter Eggs d√©couverts (pour tracking futur)
export const easterEggState = {
  discovered: new Set<string>(),
  
  markAsDiscovered(eggId: string) {
    this.discovered.add(eggId)
    console.log(`Easter Egg "${eggId}" ajout√© √† la collection !`)
  },
  
  isDiscovered(eggId: string) {
    return this.discovered.has(eggId)
  },
  
  getDiscoveredCount() {
    return this.discovered.size
  }
}
